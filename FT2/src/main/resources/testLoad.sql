drop user classiccars cascade;
create user classiccars IDENTIFIED by classiccars;
grant all privileges to classiccars;
ALTER SESSION SET CURRENT_SCHEMA=classiccars;

CREATE TABLE ADDRESS ( PID NUMBER NOT NULL, ADDRESSTYPE VARCHAR2(10), ADDRESSLINE1 VARCHAR2(50), ADDRESSLINE2 VARCHAR2(50), CITY VARCHAR2(50), STATE VARCHAR2(50), POSTALCODE VARCHAR2(15), COUNTRY VARCHAR2(50), ENTITY_PID NUMBER, PRIMARY KEY (PID) );

CREATE TABLE CUSTOMER ( CUSTOMERNUMBER NUMBER NOT NULL, CUSTOMERNAME VARCHAR2(50), CONTACTLASTNAME VARCHAR2(50), CONTACTFIRSTNAME VARCHAR2(50), PHONE VARCHAR2(50), ADDRESSLINE1 VARCHAR2(50), ADDRESSLINE2 VARCHAR2(50), CITY VARCHAR2(50), STATE VARCHAR2(50), POSTALCODE VARCHAR2(15), COUNTRY VARCHAR2(50), SALESREPEMPLOYEENUMBER NUMBER, CREDITLIMIT NUMBER, PRIMARY KEY (CUSTOMERNUMBER) );

CREATE TABLE EMPLOYEE ( EMPLOYEENUMBER NUMBER NOT NULL, LASTNAME VARCHAR2(50), FIRSTNAME VARCHAR2(50), EXTENSION VARCHAR2(10), EMAIL VARCHAR2(100), REPORTSTO NUMBER, JOBTITLE VARCHAR2(50), OFFICE_PID NUMBER, PRIMARY KEY (EMPLOYEENUMBER) );

CREATE TABLE ENTITY ( DOB DATE, DOD DATE, ENTITYNAME VARCHAR2(200), PID NUMBER NOT NULL, CONSTRAINT ENTITY_PK PRIMARY KEY (PID) );

CREATE TABLE OFFICE ( CITY VARCHAR2(50), PHONE VARCHAR2(50), ADDRESSLINE1 VARCHAR2(50), ADDRESSLINE2 VARCHAR2(50), STATE VARCHAR2(50), COUNTRY VARCHAR2(50), POSTALCODE VARCHAR2(15), TERRITORY VARCHAR2(10), ENTITY_PID NUMBER NOT NULL, CONSTRAINT PK_OFFICE PRIMARY KEY (ENTITY_PID) );

CREATE TABLE ORDERDETAIL ( ORDERNUMBER NUMBER, PRODUCTCODE VARCHAR2(15), QUANTITYORDERED NUMBER, PRICEEACH NUMBER, ORDERLINENUMBER NUMBER );
CREATE UNIQUE INDEX ORDERDETAILS_PK ON ORDERDETAIL (ORDERNUMBER, PRODUCTCODE);

CREATE TABLE ORDERS ( ORDERNUMBER NUMBER, STATUS VARCHAR2(15), COMMENTS VARCHAR2(4000), CUSTOMERNUMBER NUMBER, ORDERDATE DATE, REQUIREDDATE DATE, SHIPPEDDATE DATE );
CREATE UNIQUE INDEX ORDERS_PK ON ORDERS (ORDERNUMBER);
CREATE INDEX ORDERS_CUTOMER ON ORDERS (CUSTOMERNUMBER);
CREATE TABLE PAYMENT ( CUSTOMERNUMBER NUMBER NOT NULL, CHECKNUMBER VARCHAR2(50) NOT NULL, AMOUNT NUMBER, PAYMENTDATE DATE, PID NUMBER, PRIMARY KEY (CUSTOMERNUMBER, CHECKNUMBER) );
CREATE TABLE PRODUCT ( PRODUCTCODE VARCHAR2(15), PRODUCTNAME VARCHAR2(70), PRODUCTLINE VARCHAR2(50), PRODUCTSCALE VARCHAR2(10), PRODUCTVENDOR VARCHAR2(50), PRODUCTDESCRIPTION VARCHAR2(4000), QUANTITYINSTOCK NUMBER, BUYPRICE NUMBER, MSRP NUMBER, PRODUCTLINE_PID NUMBER );
CREATE UNIQUE INDEX PRODUCTS_PK ON PRODUCT (PRODUCTCODE);
CREATE TABLE PRODUCTLINE ( PRODUCTLINE VARCHAR2(50) NOT NULL, TEXTDESCRIPTION VARCHAR2(4000), HTMLDESCRIPTION CLOB, IMAGE BLOB, PID NUMBER NOT NULL, CONSTRAINT PK_PRODUCTLINE PRIMARY KEY (PID) );
-- ALTER TABLE ADDRESS ADD CONSTRAINT FK_ENTITY FOREIGN KEY (ENTITY_PID) REFERENCES ENTITY (PID);
-- ALTER TABLE CUSTOMER ADD CONSTRAINT FK_CUSTOMER_ENTITY FOREIGN KEY (CUSTOMERNUMBER) REFERENCES ENTITY (PID);
-- ALTER TABLE OFFICE ADD CONSTRAINT FK_ENTITY_OFFICE FOREIGN KEY (ENTITY_PID) REFERENCES ENTITY (PID);
-- ALTER TABLE PAYMENT ADD FOREIGN KEY (CUSTOMERNUMBER) REFERENCES CUSTOMER (CUSTOMERNUMBER);
-- ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_PRODUCTLINE FOREIGN KEY (PRODUCTLINE_PID) REFERENCES PRODUCTLINE (PID);

CREATE SEQUENCE ADDRESS_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE employee_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE entity_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE payment_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE productline_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE  NOORDER  NOCYCLE;

---------
ALTER SESSION SET CURRENT_SCHEMA=system;
--GRANT SELECT ON sys.dba_pending_transactions TO classiccars;
--GRANT SELECT ON sys.pending_trans$ TO classiccars;
--GRANT SELECT ON sys.dba_2pc_pending TO classiccars;
--GRANT EXECUTE ON sys.dbms_xa TO classiccars;
--GRANT FORCE ANY TRANSACTION TO classiccars;
-------
drop user dave CASCADE ;
create user dave identified by manager42;
grant all privileges to dave;
ALTER SESSION SET CURRENT_SCHEMA=dave;

CREATE SEQUENCE DAVE.PROVIDER_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE DAVE.REQUEST_ITEM_DETAIL_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE DAVE.REQUEST_ITEM_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE DAVE.REQUEST_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE DAVE.REQ_PROV_USE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
CREATE SEQUENCE DAVE.USE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;

CREATE TABLE
  DAVE.PROVIDER
(
  PID NUMBER NOT NULL,
  ID VARCHAR2(10),
  CONSTRAINT PK_PROVIDER PRIMARY KEY (PID)
);

CREATE TABLE
  DAVE.REQUEST
(
  PID NUMBER NOT NULL,
  ID VARCHAR2(10),
  CONSTRAINT PK_REQUEST PRIMARY KEY (PID),
  CONSTRAINT UQ_ID UNIQUE (ID)
);

CREATE TABLE
  DAVE.REQUEST_ITEM
(
  PID NUMBER NOT NULL,
  REQ_PID NUMBER,
  CONSTRAINT PK_REQUEST_ITEM PRIMARY KEY (PID),
  CONSTRAINT FK_REQUEST FOREIGN KEY (REQ_PID) REFERENCES dave.REQUEST (PID)
);

CREATE TABLE
  DAVE.REQUEST_ITEM_DETAIL
(
  PID NUMBER NOT NULL,
  REQ_ITEM_PID NUMBER,
  CONSTRAINT PK_REQUEST_ITEM_DETAIL PRIMARY KEY (PID),
  CONSTRAINT FK_REQUEST_ITEM FOREIGN KEY (REQ_ITEM_PID) REFERENCES dave.REQUEST_ITEM (PID)
);

CREATE TABLE
  DAVE.USE
(
  PID NUMBER NOT NULL,
  CODE VARCHAR2(10),
  DESCR VARCHAR2(30),
  CONSTRAINT PK_USE PRIMARY KEY (PID)
);

CREATE TABLE
  DAVE.REQ_PROV_USE
(
  PID NUMBER NOT NULL,
  PARENT_OBJECT_PID NUMBER,
  PROV_PID NUMBER,
  USE_PID NUMBER,
  PARENT_DESCR CHAR(1),
  CONSTRAINT PK_RPU PRIMARY KEY (PID),
  CONSTRAINT FK_PROVIDER FOREIGN KEY (PROV_PID) REFERENCES dave.PROVIDER (PID),
  CONSTRAINT FK_USE FOREIGN KEY (USE_PID) REFERENCES dave.USE (PID),
  CONSTRAINT UQ_RPU UNIQUE (USE_PID, PARENT_DESCR, PARENT_OBJECT_PID),
  CONSTRAINT CK_PARENT_DESCR CHECK (parent_descr IN ('R',
                                                     'D'))
);

CREATE TABLE
  DAVE.REQ_PROV_USE_PARENT
(
  PID NUMBER,
  REQ_PROV_USE_PID NUMBER,
  REQ_PROV_USE_PARENT NUMBER,
  CONSTRAINT FK_RPU FOREIGN KEY (REQ_PROV_USE_PID) REFERENCES dave.REQ_PROV_USE (PID),
  CONSTRAINT FK_RPU_PARENT FOREIGN KEY (REQ_PROV_USE_PARENT) REFERENCES dave.REQ_PROV_USE (PID)
);

insert into dave.PROVIDER (PID, ID) values (1, 'prov1');
insert into dave.PROVIDER (PID, ID) values (2, 'prov2');
insert into dave.PROVIDER (PID, ID) values (3, 'prov3');

insert into dave.USE (PID, CODE, DESCR) values (1, 'submit', null);
insert into dave.USE (PID, CODE, DESCR) values (2, 'service', null);
insert into dave.USE (PID, CODE, DESCR) values (3, 'attend', null);


